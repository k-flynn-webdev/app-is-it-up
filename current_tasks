tasks: ✅ ❌

perform a timed test of a url & return that result on the website
- show the last 30 days of uptime only.
	- future: show images and change over time with screencaptures at various sizes/devices?

Aims:
	- CI/CD

[BUGS]
✅ able to update user while not verified
✅ when logging out with expiredtoken DO NOT kick back an error or track it ... otherwise front end is trapped 
✅ login, password is verified before checking for user, dont 
✅ update a job is highlighted even with no changes.


[NICE]
- add consts for all options from a single file to import .. hmmm
- add headers as optional property
- add timed loads for server (eg take time reading before and after each job is done and accumilation of all jobs ..)
- also a job should have a full info layout eg:
	when last triggered by seconds, how long the request took, how much data was sent etc .. 
✅ start writing in more micro functions, less error prone and more steps/pieces to do things
✅ where possible use promises more!


[FULL-STACK]
- badge creation / & public display for a job
- deleting a job should cleanup all related pings 
- deleting a user should cleanup all job + pings
- creat a full end to end set of test for user and job creation ..
- add public/private to api for results
✅ cleanup navbar to include user acc details
✅ add user details page
✅ add email system
✅ add email recovery with magic link
✅ add account creation + email confirm
✅ setting up db backup
✅ setting up .env 
✅ setting up nginx cfg file 
✅ setting up pm2 cfg 
✅ post widget as owner
✅ get widgets as owner 
✅ update a widget as owner  
✅ delete a widget as owner 


[SERVER]
- simplify jobs like user implementation with promises
 * job creation
 * job update
 * job deletion
 * job get
- simplify job-execution like user implementation with promises
 * execution creation
 * execution update
 * execution deletion
 * execution get
- back-end periods need max to be aware of how far through month has gone on first roll over?
- create a public rendered svg badge for a job
- custom name field for jobs
- public url for sharing a private job (none editable & secure + anom)
✅ magic link generation 
✅ email verify via http magic link 
✅ email signup/send?? 
✅ email lost password/account reset 
✅ test for verification links and process
✅ redo all user code server side to be leaner and more dry. 
✅ online updating not being reflected in stack?
✅ job number doesn't seem to update/save? (fixed was issue with stack update) 
✅ api get 
✅ api create 
✅ api update 
✅ api remove  
✅ api jobs array 
✅ api jobs exec 
✅ api jobs loop 
✅ api jobs timer 
✅ api user get all 
✅ load all jobs on restart
✅ cleanup what data is sent to user, dont need db id and version etc ..
✅ only an owner or admin can edit a job


[FRONT_END]
- check for https on url?
- home button logo animates fancy on selection/hover?
- app lighthouse score to 100
- admin panel { users - jobs - server }
 * power to reset delete etc a user
 * power to create, edit, rollback etc
 * manage data base space, resets deletions etc and server load/timing?
- custom name field for jobs
- custom name field render in list
- render a public svg badge for a job
✅ show user login/creation date & time 
✅ repeatedly update a job even though no change! fix
✅ add footer with version and url 
✅ add visual feedback for errors + success
✅ add favicon + colour 
✅ add label status icons + colour  
✅ app icon 
✅ app description 
✅ change props to params server side and model .. 
✅ change time to ping server side and model .. 
✅ add active && status to server api 
✅ create job comp to render based on page
✅ switch active dropdown to besides the url so params has more space 

admin api:
	for now fake user/admin
	get all jobs present 
	get all jobs global stack 
	edit any job + global stack


